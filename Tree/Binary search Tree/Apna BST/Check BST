#include<iostream>
using namespace std;

struct Node{
  int data;
  Node* leftchild;
  Node* rightchild;
  Node(int val){
    data = val;
    leftchild=NULL;
    rightchild=NULL;
  }
};

//check BST
bool isBST(Node* root,Node* min=NULL,Node* max=NULL){
  if(root==NULL){
    return true;
  }
  if(min!=NULL && root->data <= min->data){
    return false;
  }
  if(max!=NULL && root->data >= max->data){
    return false;
  }
  bool leftvalid=isBST(root->leftchild,min,root);
  bool rightvalid=isBST(root->rightchild,root,max);
  return leftvalid && rightvalid;
}
int main(){
  Node* root=new Node(2);
  root->leftchild=new Node(1);
  root->rightchild=new Node(3);

  if(isBST(root,NULL,NULL)){
    cout<<"is Valid"<<endl;
  }
  else{
    cout<<" Not valid"<<endl;
  }
  return 0;
}
