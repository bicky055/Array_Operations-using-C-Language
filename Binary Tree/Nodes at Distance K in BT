#include<iostream>
#include<queue>
#define endl "\n"
using namespace std;

struct Node{
	int data;
	struct Node* lchild;
	struct Node* rchild;
	Node(int val){
		data=val;
		lchild=NULL;
		rchild=NULL;
	}
};

//case-1
void printSubTreeNode(Node* root,int k){
	if(root==NULL || k<0){
		return ;
	}
	if(k==0){
		cout<<root->data<<" ";
		return;
	}
	printSubTreeNode(root->lchild,k-1);
	printSubTreeNode(root->rchild,k-1);
}

//case-2
int printNodesAtK(Node* root,Node* target,int k){
	if(root==NULL){
		return -1;
	}
	if(root==target){
		printSubTreeNode(root,k);
		return 0;
	}

	int dl=printNodesAtK(root->lchild,target,k);
	if(dl!=-1){
		if(dl+1==k){
			cout<<root->data<<" ";
		}
		else{
			printSubTreeNode(root->rchild,k-dl-2);
		}
		return 1+dl;
	}

	int dr=printNodesAtK(root->rchild,target,k);
	if(dr!=-1){
		if(dr+1==k){
			cout<<root->data<<" ";
		}
		else{
			printSubTreeNode(root->lchild,k-dl-2);
		}
		return 1+dr;
	}
	return -1;
}
int main(){
	Node* root=new Node(1);
	root->lchild=new Node(2);
	root->rchild=new Node(3);
	root->lchild->lchild=new Node(4);
    root->lchild->rchild=new Node(3);
	root->rchild->rchild=new Node(6);

    printNodesAtK(root,root->lchild,1);

  return 0;
}
