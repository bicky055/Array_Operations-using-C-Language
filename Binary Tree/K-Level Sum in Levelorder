#include<bits/stdc++.h>
using namespace std;

struct Node
{
	int data;
	struct Node* lchild;
	struct Node* rchild;
	Node(int val){
		data=val;
		lchild=NULL;
		rchild=NULL;
	}
	
};

/*void printLevevOrder(Node* root){
	if(root==NULL){
		return ;
	}
	queue<Node*> q;
	q.push(root);
	q.push(NULL);

	while(!q.empty()){
		Node* node=q.front();
		q.pop();
		if(node!=NULL){
			cout<<node->data<<" ";
            if(node->lchild)
            	q.push(node->lchild);
            if(node->rchild)
            	q.push(node->rchild);
		}
		else if(!q.empty()){
			q.push(NULL);
		}
	}
}*/
int sumAtK(Node* root,int k){
	if(root==NULL){
		return -1;
	}
	queue<Node*> q;
	q.push(root);
	q.push(NULL);
	int level=0,sum=0;

	while(!q.empty()){
		Node* node=q.front();
		q.pop();

		if(node!=NULL){
			if(level==k){
				sum+=node->data;
			}
			if(node->lchild)
				q.push(node->lchild);
			if(node->rchild)
				q.push(node->rchild);
		}
		else if(!q.empty()){
			q.push(NULL);
			level++;
		}
	}
	return sum;
}
int main(){
	struct Node* root=new Node(1);
	root->lchild=new Node(2);
	root->rchild=new Node(3);
	root->lchild->lchild=new Node(4);
	root->lchild->rchild=new Node(5);
	root->rchild->lchild=new Node(6);
	root->rchild->rchild=new Node(7);

	cout<<sumAtK(root,2);
}
