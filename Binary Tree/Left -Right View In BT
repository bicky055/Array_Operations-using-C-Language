#include<iostream>
#include<queue>
#define endl "\n"
using namespace std;

struct Node{
	int data;
	struct Node* lchild;
	struct Node* rchild;
	Node(int val){
		data=val;
		lchild=NULL;
		rchild=NULL;
	}
};

void rightView(Node* root){
	if(root==NULL){
		return;
	}

	queue<Node*> q;
	q.push(root);

	while(!q.empty()){
		int n=q.size();
		for(int i=0;i<n;i++){
			Node* curr=q.front();
			q.pop();
			if(i==n-1){
				cout<<curr->data<<" ";
			}
			if(curr->lchild!=NULL){
				q.push(curr->lchild);
			}
			if(curr->rchild!=NULL){
				q.push(curr->rchild);
			}
		}
	}
}

void leftView(Node* root){
	if(root==NULL){
		return;
	}

	queue<Node*> q;
	q.push(root);

	while(!q.empty()){
		int n=q.size();
		for(int i=1;i<=n;i++){
			Node* temp=q.front();
			q.pop();
			if(i==1){
				cout<<temp->data<<" ";
			}
			if(temp->lchild!=NULL){
				q.push(temp->lchild);
			}
			if(temp->rchild!=NULL){
				q.push(temp->rchild);
			}
		}
	}
}
int main(){
	Node* root1=new Node(1);
	root1->lchild=new Node(2);
	root1->rchild=new Node(3);
	root1->lchild->lchild=new Node(4);
	root1->lchild->rchild=new Node(5);
	root1->rchild->lchild=new Node(6);
	root1->rchild->rchild=new Node(7);

	rightView(root1);
	cout<<endl;
	leftView(root1);

}
