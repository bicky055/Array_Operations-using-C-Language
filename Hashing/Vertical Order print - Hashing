#include "bits/stdc++.h"
using namespace std;
//micro functions
#define endl "\n";
#define mod 1000000007
#define ll long long
#define vi vector<int>
#define pii pair<int,int>
#define vii vector<pii>
#define mi multiset<int>
#define rep(i,a,b) for(int i=a; i<b; i++)
#define rep1(i,a,b) for(int i=a; i>b; i--)
#define ff first
#define ss second
#define pb push_back
#define LM LONG_MAX
#define setBits(x) builtin_popcount(x)

struct Node{
  int key;
  Node *left, *right;
};
Node* newNode(int key){
  Node* node = new Node;
  node->key = key;
  node->left = node->right =NULL;
  return node;
}

void getVerticalOrder(Node* root,int Hdis,map<int, vi> &m){
  if(root == NULL ){
    return ;
  }
  m[Hdis].push_back(root->key);
  getVerticalOrder(root->left,Hdis-1,m);
  getVerticalOrder(root->right,Hdis+1,m);
}
signed main(){
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  #ifndef ONLINE_JUDGE
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  #endif

  Node* root = newNode(10);
  root->left = newNode(7);
  root->right = newNode(4);
  root->left->left = newNode(3);
  root->left->right = newNode(11);
  root->right->left = newNode(14);
  root->right->right = newNode(6);

  map <int, vector<int> > m;
  int Hdis = 0;

  getVerticalOrder(root, Hdis, m);

  map<int,vi> :: iterator it;
  for(it = m.begin(); it != m.end(); it++){
    for(int i=0; i<(it->ss).size(); i++){
      cout << it->ss[i] << " ";
    }
    cout << endl;
  }
    return 0;
}
