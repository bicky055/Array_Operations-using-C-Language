#include<iostream>
using namespace std;

class node
{
	public :
		int data;
		node* next;
		node* prev;
		node(int val)
		{
			data=val;
			next=NULL;
			prev=NULL;
		}
};

// insert at Head 
void insertAtHead(node* &head,int val){
	node* n=new node(val);
	n->next=head;
	if(head!=NULL){
		n->prev=NULL;
	}
	head=n;
}
//insert fuction at Tail possition

void insertAtTail(node* &head,int val){
	//check if insert at head Node
	if(head==NULL){
		insertAtHead(head,val);
		return ;
	}
	
	node* n=new node(val);
	node* temp=head;
	
	while(temp->next!=NULL){
		temp=temp->next;
	}
	
	temp->next=n;
	n->prev=temp;
}
void display(node* &head){
	node* temp=head;
	while(temp!=NULL){
		cout<<temp->data<<" ";
		temp=temp->next;
	}cout<<endl;
}
//delete Head node
void DeleteAtHead(node* &head){
    node* todelete=head;
    head=head->next;
    head->prev=NULL;
    
    delete todelete;
}
//Delete opretion 
void Deletion(node* &head,int pos)
{
    //check 1st 
    if(pos==1){
        DeleteAtHead(head);
        return ;
    }
    
    node* temp=head;
    int count=1;
    
    while(temp!=NULL && count!=pos){
        temp=temp->next;
        count++;
    }
    
    temp->prev->next=temp->next;
    if(temp->next!=NULL){
        temp->next->prev=temp->prev;
    }
    
    delete temp;
}
int main(){
	node* head=NULL;
	insertAtTail(head,1);
	insertAtTail(head,2);
	insertAtTail(head,3);
	insertAtTail(head,4);
	insertAtTail(head,5);
	display(head);
	
	DeleteAtHead(head);
	display(head);
	
	Deletion(head,2);
	display(head);
}



