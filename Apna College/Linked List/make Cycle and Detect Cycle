#include <iostream>
using namespace std;

class node
{
     public :
     int data;
     node *next;
     node(int val)
     {
           data = val;
          next = NULL;
     }
};
//Implementation

void insertAtTail(node* &head,int val)
{
     node* n=new node(val);
     //check 1st
     if(head==NULL){
          head=n;
          return ;
     }
     node* temp = head;
     while(temp->next!=NULL)
     {
          temp=temp->next;
     }
     temp->next=n;
}

// insreting at head
void insertAthead(node* &head,int val)
{
     node* n=new node(val);
     n->next=head;
     head = n;
}

void display(node* head)
{
     node* temp=head;
     while(temp!=NULL)
     {
          cout<<temp->data<<"->";
          temp=temp->next;
     }
     cout<<"NULL"<<endl;
}
// creat cyclie in LinkedList
void MakeCycle(node* &head,int pos){
	node* temp=head;
	node* startnode;
	int count=1;
	
	while(temp->next!=NULL){
		if(count==pos){
			startnode=temp;
		}
		temp=temp->next;
		count++;
	}
	temp->next=startnode;
}
bool detectCycle(node* &head){
	node* slow=head;
	node* fast=head;
	
	while(fast!=NULL && fast->next!=NULL){
		slow=slow->next;
		fast=fast->next->next;
		if(fast==slow){
			return true;
		}
	}
	return false;
}
int main() {
	
	node* head=NULL;
	insertAtTail(head,10);
	insertAtTail(head,20);
	insertAtTail(head,30);
	insertAtTail(head,40);
	insertAtTail(head,50);
	insertAtTail(head,60);
	
	display(head);
	 
	 MakeCycle(head,3);
	 //display(head);
	 cout<<detectCycle(head);
	return 0;
	
}
